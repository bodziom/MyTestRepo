<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="1/22/2020 9:34:21 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="LLWAPF14CTZ4"
  DTS:CreatorName="onwelo\Bogdan.Marczak"
  DTS:DTSID="{45721119-98A9-42BA-9E0E-6993014F60A9}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1900.80"
  DTS:LocaleID="1045"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="58"
  DTS:VersionGUID="{D801CAA1-44F3-4687-AB7A-5C626471738E}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\BM_poligon01"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{7AAB3E92-FF45-49B3-AC04-F69599E80BA8}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="BM_poligon01"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_676c12077b48413fb66795040072ac74"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using Microsoft.SqlServer.Dts;
using Microsoft.SqlServer.Dts.Tasks.BulkInsertTask;
using Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask;
using System.Windows.Forms;
#endregion

namespace ST_676c12077b48413fb66795040072ac74
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            //Utworzenie Aplikacji:
            Microsoft.SqlServer.Dts.Runtime.Application app = new Microsoft.SqlServer.Dts.Runtime.Application();



            //Utworzenie Pakietu:
            Package pckg = new Package
            {
                Name = "testowy Pakiet",
                ProtectionLevel = DTSProtectionLevel.DontSaveSensitive,
                CreationDate = DateTime.Now,
                DelayValidation = true,
                Description = "Package Description"
            };


            /* The following list shows the names for each task that are used after the STOCK moniker.
             https://docs.microsoft.com/en-us/sql/integration-services/building-packages-programmatically/adding-tasks-programmatically?view=sql-server-ver15
            
             */

            //Utworzenie Sekwencji
            Sequence SequenceName_1   = pckg.Executables.Add("STOCK:Sequence") as Sequence;
            //Executable exec = pckg.Executables.Add("STOCK:BulkInsertTask");

            TaskHost ts_SQLTask = (TaskHost)pckg.Executables.Add("STOCK:SQLTask");
            ts_SQLTask.Name = "SQL_TASK00";

            Executable SqlExec = SequenceName_1.Executables.Add("STOCK:SQLTask");

            String[] tasks =  {"STOCK:SQLTask", "STOCK:ScriptTask", "STOCK:ExecuteProcessTask", "STOCK:PipelineTask", "STOCK:FTPTask", "STOCK:SendMailTask", "STOCK:MSMQTask"};

           foreach (String s in tasks)
            {
                string ss = s.Replace("STOCK:", "");
                TaskHost tsk = (TaskHost)pckg.Executables.Add(s);
                DtsProperties prop = tsk.Properties;
                tsk.Name = ss;
            }



            //TaskHost th = exec1 as TaskHost;


            SequenceName_1.Name = "SEQ Start1";

            String DtsxName = "Testy.dtsx"; //DateTime.Now.ToString().Replace(":", "").Replace(" ", "").Replace(".", "");
            string PackagePath = "C:\\Users\\Bogdan.Marczak\\OneDrive - ONWELO S.A\\Pulpit\\MediaMarkt\\" + DtsxName + ".dtsx";



            ForEachLoop ForEachLoop = pckg.Executables.Add("STOCK:ForEachLoop") as ForEachLoop;
            ForEachLoop.Name = "FELOOP Start1";




            //ForEachADOEnumerator ado_enum = ForEachLoop.ForEachEnumerator.InnerObject as ForEachADOEnumerator;




            app.SaveToXml(PackagePath, pckg, null);


            Dts.TaskResult = (int)ScriptResults.Success;
            Console.WriteLine("Package created");
            Console.WriteLine();

        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_676c12077b48413fb66795040072ac74.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{CFD9DE4F-CE49-4DE8-A44D-D1E6EA7DB1EE}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_676c12077b48413fb66795040072ac74</RootNamespace>
    <AssemblyName>ST_676c12077b48413fb66795040072ac74</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.SqlServer.BulkInsertTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL" />
    <Reference Include="Microsoft.SqlServer.SQLTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=x86" />
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_676c12077b48413fb66795040072ac74</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_676c12077b48413fb66795040072ac74</msb:DisplayName>
    <msb:ProjectId>{2AF53D3A-8CCA-4B67-8A72-BF1FB53CEC07}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_676c12077b48413fb66795040072ac74.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_676c12077b48413fb66795040072ac74.Properties.Settings.get_Default():ST_676c12077b48413fb66795040072ac74.Properties.Sett" +
    "ings")]

namespace ST_676c12077b48413fb66795040072ac74.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_676c12077b48413fb66795040072ac74")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_676c12077b48413fb66795040072ac74")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_676c12077b48413fb66795040072ac74.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_676c12077b48413fb66795040072ac74.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_676c12077b48413fb66795040072ac74.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_676c12077b48413fb66795040072ac74.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_676c12077b48413fb66795040072ac74.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_676c12077b48413fb66795040072ac74.dll">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
3gQQAFkA3gQQAGEA3gQQAGkA3gQGAJkA3gQGAMEA3gQVANEA3gQGAHkA3gQGAIEA3gQGANkAwgAQ
AIEA0AMrAOkAQQYxAIEAZwE2ANkARQQ8ANkAlQQQAIEAzQVBAPEAXgBGAIkAzQVBAAkBYgBMAAEB
sAVSAAkBDwZYAHkADARfAHEA7gVpACkBKQYBADEB9ABvADEB9AB0AHEA3gQGAKEA3gQGADkBqAB4
ADkBSQaBAKkA3gSHAMkA3gQGAAgAFAChAAgAGACmACkAcwAKAS4ACwDiAC4AEwDrAC4AGwAKAS4A
IwATAS4AKwA8AS4AMwA8AS4AOwA8AS4AQwATAS4ASwBCAS4AUwA8AS4AWwBZAUMAYwCmAEkAcwAK
AWEAewCmAGMAawCmABsAAwABAAQAAwAAAMEE0wAAACsB2AAAACEG3QACAAQAAwACAAUABQABAAYA
BQACAAcABwAEgAAAAQAAAKAcJkYAAAAAAAABAAAABAAAAAAAAAAAAAAAjwBVAAAAAAAOAAAAAAAA
AAAAAACYAE0DAAAAAA4AAAAAAAAAAAAAAJgALgAAAAAABAAAAAAAAAAAAAAAjwAWBAAAAAAAAAAA
AQAAAC8FAAAFAAIAAAAAAABTVF82NzZjMTIwNzdiNDg0MTNmYjY2Nzk1MDQwMDcyYWM3NAA8TW9k
dWxlPgBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBtc2NvcmxpYgBBZGQA
UmVwbGFjZQBkZWZhdWx0SW5zdGFuY2UAU2VxdWVuY2UAUGFja2FnZQBFeGVjdXRhYmxlAFJ1bnRp
bWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAENvbnNvbGUAc2V0X05hbWUARGF0ZVRpbWUA
TWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBXcml0ZUxpbmUAVHlwZQBGYWlsdXJlAGdl
dF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RN
b2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAc2V0X0NyZWF0aW9uRGF0ZQBFZGl0b3JC
cm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJD
b2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRl
AEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0
RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJs
eURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNz
ZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3Jp
cHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGlt
ZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBT
dHJpbmcATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1v
ZGVsAERUU1Byb3RlY3Rpb25MZXZlbABzZXRfUHJvdGVjdGlvbkxldmVsAFNUXzY3NmMxMjA3N2I0
ODQxM2ZiNjY3OTUwNDAwNzJhYzc0LmRsbABTYXZlVG9YbWwAU3lzdGVtAEVudW0AcmVzb3VyY2VN
YW4AU2NyaXB0TWFpbgBBcHBsaWNhdGlvbgBzZXRfRGVsYXlWYWxpZGF0aW9uAFN5c3RlbS5Db25m
aWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAHNldF9EZXNj
cmlwdGlvbgBDdWx0dXJlSW5mbwBGb3JFYWNoTG9vcABnZXRfUmVzb3VyY2VNYW5hZ2VyAER0c0Nv
bnRhaW5lcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNv
bXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF82NzZjMTIwNzdiNDg0MTNmYjY2Nzk1
MDQwMDcyYWM3NC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMA
U1RfNjc2YzEyMDc3YjQ4NDEzZmI2Njc5NTA0MDA3MmFjNzQuUHJvcGVydGllcwBnZXRfUHJvcGVy
dGllcwBEdHNQcm9wZXJ0aWVzAGdldF9FeGVjdXRhYmxlcwBTZXR0aW5ncwBTdWNjZXNzAGdldF9E
dHMAU2NyaXB0UmVzdWx0cwBJRFRTRXZlbnRzAENvbmNhdABPYmplY3QAZ2V0X0RlZmF1bHQAc2V0
X1Rhc2tSZXN1bHQAVGFza0hvc3QAZ2V0X05vdwBnZXRfQXNzZW1ibHkAAAAAHXQAZQBzAHQAbwB3
AHkAIABQAGEAawBpAGUAdAAAJ1AAYQBjAGsAYQBnAGUAIABEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AB1TAFQATwBDAEsAOgBTAGUAcQB1AGUAbgBjAGUAABtTAFQATwBDAEsAOgBTAFEATABUAGEAcwBr
AAAVUwBRAEwAXwBUAEEAUwBLADAAMAAAIVMAVABPAEMASwA6AFMAYwByAGkAcAB0AFQAYQBzAGsA
ADFTAFQATwBDAEsAOgBFAHgAZQBjAHUAdABlAFAAcgBvAGMAZQBzAHMAVABhAHMAawAAJVMAVABP
AEMASwA6AFAAaQBwAGUAbABpAG4AZQBUAGEAcwBrAAAbUwBUAE8AQwBLADoARgBUAFAAVABhAHMA
awAAJVMAVABPAEMASwA6AFMAZQBuAGQATQBhAGkAbABUAGEAcwBrAAAdUwBUAE8AQwBLADoATQBT
AE0AUQBUAGEAcwBrAAANUwBUAE8AQwBLADoAAAEAFVMARQBRACAAUwB0AGEAcgB0ADEAABVUAGUA
cwB0AHkALgBkAHQAcwB4AACAgUMAOgBcAFUAcwBlAHIAcwBcAEIAbwBnAGQAYQBuAC4ATQBhAHIA
YwB6AGEAawBcAE8AbgBlAEQAcgBpAHYAZQAgAC0AIABPAE4AVwBFAEwATwAgAFMALgBBAFwAUAB1
AGwAcABpAHQAXABNAGUAZABpAGEATQBhAHIAawB0AFwAAQsuAGQAdABzAHgAACNTAFQATwBDAEsA
OgBGAG8AcgBFAGEAYwBoAEwAbwBvAHAAABtGAEUATABPAE8AUAAgAFMAdABhAHIAdAAxAAAfUABh
AGMAawBhAGcAZQAgAGMAcgBlAGEAdABlAGQAAHFTAFQAXwA2ADcANgBjADEAMgAwADcANwBiADQA
OAA0ADEAMwBmAGIANgA2ADcAOQA1ADAANAAwADAANwAyAGEAYwA3ADQALgBQAHIAbwBwAGUAcgB0
AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAsIx21PO92kKC1PmcV3i+HgAEIAEBCAMgAAEF
IAEBEREEIAEBDgUgAQERXQ8HCRI9EkESRQ4OHQ4IDg4FIAEBEXEEAAARdQUgAQERdQQgAQECBCAA
EnkFIAESfQ4FIAIODg4FIAASgIkGAAMODg4OCSADAQ4SQRKAkQUgABKAlQQAAQEOAwAAAQgAARKA
nRGAoQUgABKApQcgAgEOEoClCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGElUDBhJZAwYS
EAIGCAMGERQEAAASVQQAABJZBQABARJZBAAAEhAECAASVQQIABJZBAgAEhAIAQAIAAAAAAAeAQAB
AFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzY3NmMxMjA3N2I0ODQx
M2ZiNjY3OTUwNDAwNzJhYzc0AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjAAAEkBABouTkVU
RnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFt
ZXdvcmsgNC41ALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRl
ciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlU
b2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0
AgAAAAAAAAAAAAAAUEFEUEFEULQAAAD0MgAAAAAAAAAAAAAOMwAAACAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAADMAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAJkagHAAAAQAmRqAcPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAFQAXwA2ADcANgBjADEAMgAwADcANwBiADQAOAA0ADEAMwBmAGIANgA2ADcAOQA1ADAANAAw
ADAANwAyAGEAYwA3ADQAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
NwAzADIAOAAuADEANwA5ADUAOAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABT
AFQAXwA2ADcANgBjADEAMgAwADcANwBiADQAOAA0ADEAMwBmAGIANgA2ADcAOQA1ADAANAAwADAA
NwAyAGEAYwA3ADQALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAA
AEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIAMAAAACoAAQABAEwAZQBnAGEAbABUAHIA
YQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBh
AG0AZQAAAFMAVABfADYANwA2AGMAMQAyADAANwA3AGIANAA4ADQAMQAzAGYAYgA2ADYANwA5ADUA
MAA0ADAAMAA3ADIAYQBjADcANAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBl
AAAAAABTAFQAXwA2ADcANgBjADEAMgAwADcANwBiADQAOAA0ADEAMwBmAGIANgA2ADcAOQA1ADAA
NAAwADAANwAyAGEAYwA3ADQAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADcAMwAyADgALgAxADcAOQA1ADgAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYA
ZQByAHMAaQBvAG4AAAAxAC4AMAAuADcAMwAyADgALgAxADcAOQA1ADgAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAIDMAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Flow Full Example"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{4BC81371-B59F-4CFC-B2F5-63ED7B66D12B}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Flow Full Example"
      DTS:ThreadHint="2">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_b225ccd84ffc443b93d3ec473958fa41"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using System.Data.Sql;
using System.Data.SqlTypes;
using System.Data.SqlClient;
using Microsoft.SqlServer.Server;
using Microsoft.SqlServer.Dts.Tasks;
using Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask;
using Microsoft.SqlServer.Dts.Runtime;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using RuntimeWrapper = Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.IO;
using System.Windows.Forms;
#endregion

namespace ST_b225ccd84ffc443b93d3ec473958fa41
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        [Obsolete]
        public void Main()
        {
            // TODO: Add your code here
            //After declarations, create an instance of application and package:
            Microsoft.SqlServer.Dts.Runtime.Application SIFISO_app = new Microsoft.SqlServer.Dts.Runtime.Application();
            try
            {

             //Application SIFISO_app = new Application();
            Package dyna_pkg = new Package()
            {
                Name = "testowy Pakiet",
                ProtectionLevel = DTSProtectionLevel.DontSaveSensitive,
                CreationDate = DateTime.Now,
                DelayValidation = true,
                Description = "Package Description"
            };
            
            
            //Create a connection to AdventureWorks2008R2 database.
            ConnectionManager ConMgr = dyna_pkg.Connections.Add("OLEDB");
            ConMgr.ConnectionString = "Provider = SQLOLEDB.1;" + "Integrated Security = SSPI; Initial Catalog = AdventureWorks2008R2;" + "Data Source = (local);";
            ConMgr.Name = "ConMgr_OLEDB";
            ConMgr.Description = "OLE DB connection to the AdventureWorks2008R2 database.";

            //Insert a Sequence container:
            Sequence exec_SEQ = (Sequence)dyna_pkg.Executables.Add("STOCK:SEQUENCE");
            exec_SEQ.FailPackageOnFailure = true;
            exec_SEQ.FailParentOnFailure = true;
            exec_SEQ.Name = @"select SIFISO Sequence Container";
            exec_SEQ.Description = @"select SIFISO Sequence Container";

            //Add the following Execute SQL Tasks:
            Executable exec = exec_SEQ.Executables.Add("STOCK:SQLTask");
            TaskHost th = exec as TaskHost;
            th.Properties["Name"].SetValue(th, "Create View");
            th.Properties["Description"].SetValue(th, "Drops and Create SQL View which based on Adventureworks database");
            th.Properties["Connection"].SetValue(th, "ConMgr_OLEDB");
            th.Properties["SqlStatementSource"].SetValue(th, "CREATE OR REPLACE VIEW v_Sales as select* from Employee");

            Executable exec2 = exec_SEQ.Executables.Add("STOCK:SQLTask");
            TaskHost th2 = exec2 as TaskHost;
            th2.Properties["Name"].SetValue(th2, "select from view");
            th2.Properties["Description"].SetValue(th2, "select from view");
            th2.Properties["Connection"].SetValue(th2, "ConMgr_OLEDB");
            th2.Properties["SqlStatementSource"].SetValue(th2, "SELECT * FROM v_Sales");

            Executable exec3 = dyna_pkg.Executables.Add("STOCK:SQLTask");
            TaskHost th3 = exec3 as TaskHost;
            th3.Properties["Name"].SetValue(th3, "delete View");
            th3.Properties["Description"].SetValue(th3, "delete View");
            th3.Properties["Connection"].SetValue(th3, "ConMgr_OLEDB");
            th3.Properties["SqlStatementSource"].SetValue(th3, "DROP VIEW v_Sales");

            //Insert a data flow task:
            Executable e = exec_SEQ.Executables.Add("STOCK:PipelineTask");
            TaskHost thMainPipe = e as TaskHost;
            MainPipe dataFlowTask = thMainPipe.InnerObject as MainPipe;
            thMainPipe.Name = "selectSIFISO data Flow";

            //Add a source OLEDB connection manager to the package:

            ConnectionManager cm = dyna_pkg.Connections.Add("OLEDB");
            cm.Name = "OLEDB ConnectionManager";
            cm.ConnectionString = "Provider = SQLOLEDB.1;" + "Integrated Security = SSPI; Initial Catalog = AdventureWorks2008R2;" + "Data Source = (local);";

            //Add a destination OLEDB connection manager to the package:

            // Add an OLEDB connection manager to the package.
            ConnectionManager cm_DES = dyna_pkg.Connections.Add("OLEDB");
            cm_DES.Name = "DES OLEDB";
                cm_DES.ConnectionString = "Provider = SQLOLEDB.1;" + "Integrated Security = SSPI; Initial Catalog = AdventureWorks2008R2;" + "Data Source = (local);";
                //Add an OLE DB source to the data flow:

                IDTSComponentMetaData100 component =
            dataFlowTask.ComponentMetaDataCollection.New();
            component.Name = "OLEDBSource";
            component.ComponentClassID = "DTSAdapter.OleDbSource.2";

                            //Get the design time instance of the component and initialize the component:

                            CManagedComponentWrapper instance = component.Instantiate();
                                          instance.ProvideComponentProperties();

                    /*           //Specify the connection manager:

                                            if (component.RuntimeConnectionCollection.Count > 0)
                                            {
                                                component.RuntimeConnectionCollection[0].ConnectionManager =
                                                DtsConvert.GetExtendedInterface(dyna_pkg.Connections[0]);
                                                component.RuntimeConnectionCollection[0].ConnectionManagerID =
                                                dyna_pkg.Connections[0].ID;
                                            }

                                            //Set the custom properties:

                                            //instance.SetComponentProperty("AccessMode", 2);
                                            instance.SetComponentProperty("SqlCommand",
                                            "SELECT * FROM Person.Person");

                                            //Reinitialize the source metadata:

                                            instance.AcquireConnections(null);
                                            instance.ReinitializeMetaData();
                                            instance.ReleaseConnections();

                                            //Add the destination component:

                                            IDTSComponentMetaData100 destination =
                                            dataFlowTask.ComponentMetaDataCollection.New();
                                            destination.ComponentClassID = "DTSAdapter.OleDbDestination";
                                            destination.Name = "OLEDBDestination";

                                            //Get destination design-time instance and initialise component:

                                            CManagedComponentWrapper destDesignTime = destination.Instantiate();
                                            destDesignTime.ProvideComponentProperties();

                                            //Set destination connection:

                                            destination.RuntimeConnectionCollection[0].ConnectionManagerID = cm_DES.ID;
                                            destination.RuntimeConnectionCollection[0].ConnectionManager = DtsConvert.ToConnectionManager90(cm_DES);

                                            //Set destination table name:

                                            destDesignTime.SetComponentProperty("OpenRowset", "Person.Person_copy_");
                                            destDesignTime.SetComponentProperty("AccessMode", 3);
                                            destDesignTime.SetComponentProperty("FastLoadOptions", "TABLOCK, CHECK_CONSTRAINTS");

                                            //Connect the source to destination component:

                                            dataFlowTask.PathCollection.New().AttachPathAndPropagateNotifications(component.OutputCollection[0],
                                            destination.InputCollection[0]);

                                            //Get input and virtual input for destination to select and map columns:

                                            IDTSInput100 destinationInputerr = destination.InputCollection[0];
                                            IDTSVirtualInput100 destinationVirtualInputerr = destinationInputerr.GetVirtualInput();
                                            IDTSVirtualInputColumnCollection100 destinationVirtualInputColumnserr =
                                            destinationVirtualInputerr.VirtualInputColumnCollection;

                                            //Reinitialize the destination metadata:

                                            destDesignTime.AcquireConnections(null);
                                            destDesignTime.ReinitializeMetaData();
                                            destDesignTime.ReleaseConnections();

                                            //Get the destination�s default input and virtual input:

                                            IDTSInput100 input = destination.InputCollection[0];
                                            IDTSVirtualInput100 vInput = input.GetVirtualInput();

                                            //Iterate through the virtual input column collection:

                                            foreach (IDTSVirtualInputColumn100 vColumn in vInput.VirtualInputColumnCollection)
                                            {
                                                // Select column, and retain new input column
                                                IDTSInputColumn100 inputColumn = destDesignTime.SetUsageType(input.ID,
                                                vInput, vColumn.LineageID, DTSUsageType.UT_READONLY);
                                                // Find external column by name
                                                IDTSExternalMetadataColumn100 externalColumn =
                                                input.ExternalMetadataColumnCollection[inputColumn.Name];
                                                // Map input column to external column
                                                destDesignTime.MapInputColumn(input.ID, inputColumn.ID, externalColumn.ID);

                                                //Join the Execute SQL Tasks:
                                                PrecedenceConstraint pcFileTasks3 =
                                                exec_SEQ.PrecedenceConstraints.Add((Executable)exec, (Executable)e);
                                                pcFileTasks3.Value = DTSExecResult.Success;

                                                PrecedenceConstraint pcFileTasks =
                                                exec_SEQ.PrecedenceConstraints.Add((Executable)e, (Executable)exec2);
                                                pcFileTasks.Value = DTSExecResult.Success;

                                                PrecedenceConstraint pcFileTasks2 =
                                                dyna_pkg.PrecedenceConstraints.Add((Executable)exec_SEQ, (Executable)exec3);
                                                pcFileTasks2.Value = DTSExecResult.Success;
                                            }
                                           */
                string dtsxDir = "C:\\MyDevelopment\\MyTestRepo\\SSIS\\MyTest\\MyTestpkg_create_DTS_Seq_Sql_Tasks.dtsx";

                SIFISO_app.SaveToXml(dtsxDir, dyna_pkg, null);

                //We then save the package into a file system.

                //SIFISO_app.SaveToXml(dtsxDir + "pkg_create_DTS.dtsx", dyna_pkg, null); 
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message.ToString());
                throw;
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_b225ccd84ffc443b93d3ec473958fa41</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_b225ccd84ffc443b93d3ec473958fa41</msb:DisplayName>
    <msb:ProjectId>{481D57F9-27C8-40C3-A60E-87652D232C75}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_b225ccd84ffc443b93d3ec473958fa41.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="ST_b225ccd84ffc443b93d3ec473958fa41.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{0FFABB37-E5EE-4B49-A36A-15473DA86E7B}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_b225ccd84ffc443b93d3ec473958fa41</RootNamespace>
    <AssemblyName>ST_b225ccd84ffc443b93d3ec473958fa41</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <EmbedInteropTypes>True</EmbedInteropTypes>
    </Reference>
    <Reference Include="Microsoft.SQLServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=x86">
      <EmbedInteropTypes>True</EmbedInteropTypes>
    </Reference>
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL" />
    <Reference Include="Microsoft.SqlServer.SQLTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=x86" />
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b225ccd84ffc443b93d3ec473958fa41.Properties.Settings.get_Default():ST_b225ccd84ffc443b93d3ec473958fa41.Properties.Sett" +
    "ings")]

namespace ST_b225ccd84ffc443b93d3ec473958fa41.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_b225ccd84ffc443b93d3ec473958fa41")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_b225ccd84ffc443b93d3ec473958fa41")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b225ccd84ffc443b93d3ec473958fa41.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b225ccd84ffc443b93d3ec473958fa41.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b225ccd84ffc443b93d3ec473958fa41.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_b225ccd84ffc443b93d3ec473958fa41.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_b225ccd84ffc443b93d3ec473958fa41.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_b225ccd84ffc443b93d3ec473958fa41.dll">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
GwABATsHBgAJATsHAQARATsHEACBADsHBgCJADsHBgAhAdYBEACJALIFMQAxASMJOACJAK0CPgAh
ATAGRQAhAaoGEACJAKUISgA5AWEBUABBAREFEABBAdYBEABBAaoGEACJAGQIVwBJAWEBXQAhASAC
RQAhATkCRQBZAWQIVwCRACwIZABhAfgFagBpAegEcQCRAN4IdwCBAO4FewBxAL0IhQB5AQcJAQCZ
AIYBiwCxACYFiwCBASsJjwBxADsHBgCxADsHBgDxALsBlgDxADsJngC5ADsHpADZADsHBgAIABQA
vgAIABgAwwAgAGsAwwApAHsARwEuAAsAHwEuABMAKAEuABsARwEuACMAUAEuACsAeQEuADMAeQEu
ADsAeQEuAEMAUAEuAEsAfwEuAFMAeQEuAFsAlgFDAGMAwwBJAHsARwFhAIMAwwBjAHMAwwCJAKMA
4AGjAIMAwwCjAIsAFgKjAJMAQAKjAJsAwwCpAKMA6QHDAIMAwwDDAIsAoALDAJsAwwDJAKMADQLj
AIMAwwDjAKsAygLjAIsA1ALjAJsAwwADAYMAwwADAYsAFgIDAZsAwwAjAYMAwwAjAYsA/gIjAZsA
wwBDAYMAwwBDAYsAKANDAZsAwwBgAaMA4AFjAYMAwwBjAYsAUgNjAZsAwwCAAaMA4AGDAYMAwwCD
AZMAQAKDAYsAUgODAZsAwwDAAaMA6QHgAaMA6QEgAqMA8gFgAqMA+wGAAqMABALAAqMADQIFAMgA
BwDIAAkAyAALAMgADQDKAA8AygARAMoAIQADAAEABAADAAYABAALAAYAAADKBgcBAABxAgwBAADy
CBEBAADkARYBAAAgARYBAACEBhoBAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcAAgALAAkAAQAMAAkA
AgAOAAsAAQAPAAsAAgAWAA0ABIAAAAEAAACgHLBnAAAAAAAAiQAAAAQAAAAAAAAAAAAAAKwAWAEA
AAAADgAAAAAAAAAAAAAAtQAvBQAAAAAOAAAAAAAAAAAAAAC1ADEBAAAAAAQAAAAAAAAAAAAAAKwA
AQYAAAAABAAAAAAAAAAAAAAArAB9CAAAAAAAAAAAAQAAAKsHAAANAAIAAAAAAABJRFRTQ29tcG9u
ZW50TWV0YURhdGExMDAASURUU1BpcGVsaW5lMTAwAElEVFNPYmplY3RNb2RlbDEwMABJRFRTQ29t
cG9uZW50TWV0YURhdGFDb2xsZWN0aW9uMTAwAElEVFNPYmplY3QxMDAASURUU0Rlc2lnbnRpbWVD
b21wb25lbnQxMDAAU1RfYjIyNWNjZDg0ZmZjNDQzYjkzZDNlYzQ3Mzk1OGZhNDEAX1Z0YmxHYXAx
XzEAX1Z0YmxHYXAyXzIAX1Z0YmxHYXAzXzIAX1Z0YmxHYXAxXzMAX1Z0YmxHYXAxXzQAPE1vZHVs
ZT4AZ2V0X0NvbXBvbmVudENsYXNzSUQAc2V0X0NvbXBvbmVudENsYXNzSUQAYnN0ckNvbXBvbmVu
dENsYXNzSUQATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIA
QWRkAGRlZmF1bHRJbnN0YW5jZQBTZXF1ZW5jZQBQYWNrYWdlAGdldF9NZXNzYWdlAElFbnVtZXJh
YmxlAEV4ZWN1dGFibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAZ2V0X05h
bWUAc2V0X05hbWUAcGJzdHJOYW1lAERhdGVUaW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1
bnRpbWUATWFpblBpcGUAVHlwZQBzZXRfRmFpbFBhY2thZ2VPbkZhaWx1cmUAc2V0X0ZhaWxQYXJl
bnRPbkZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFS
VFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBzZXRfQ3JlYXRp
b25EYXRlAEluc3RhbnRpYXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAERpc3BJZEF0dHJpYnV0ZQBD
b21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBHdWlkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNv
ZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUA
QXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBPYnNvbGV0ZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFy
a0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9u
QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUARGVmYXVsdE1lbWJlckF0dHJp
YnV0ZQBUeXBlSWRlbnRpZmllckF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmli
dXRlAENvQ2xhc3NBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29w
eXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJs
eUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU2V0VmFsdWUA
dmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBzZXRfQ29ubmVjdGlvblN0cmluZwBUb1N0
cmluZwBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9k
ZWwARFRTUHJvdGVjdGlvbkxldmVsAHNldF9Qcm90ZWN0aW9uTGV2ZWwAU1RfYjIyNWNjZDg0ZmZj
NDQzYjkzZDNlYzQ3Mzk1OGZhNDEuZGxsAFNhdmVUb1htbABnZXRfSXRlbQBTeXN0ZW0ARW51bQBy
ZXNvdXJjZU1hbgBTY3JpcHRNYWluAEFwcGxpY2F0aW9uAHNldF9EZWxheVZhbGlkYXRpb24AU3lz
dGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24A
Z2V0X0NvbXBvbmVudE1ldGFEYXRhQ29sbGVjdGlvbgBFeGNlcHRpb24Ac2V0X0Rlc2NyaXB0aW9u
AEN1bHR1cmVJbmZvAGdldF9SZXNvdXJjZU1hbmFnZXIAQ29ubmVjdGlvbk1hbmFnZXIARHRzQ29u
dGFpbmVyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBwZXIAQ01hbmFnZWRD
b21wb25lbnRXcmFwcGVyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1
bnRpbWUuSW50ZXJvcFNlcnZpY2VzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lz
dGVtLlJlc291cmNlcwBTVF9iMjI1Y2NkODRmZmM0NDNiOTNkM2VjNDczOTU4ZmE0MS5Qcm9wZXJ0
aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfYjIyNWNjZDg0ZmZjNDQz
YjkzZDNlYzQ3Mzk1OGZhNDEuUHJvcGVydGllcwBnZXRfUHJvcGVydGllcwBEdHNQcm9wZXJ0aWVz
AFByb3ZpZGVDb21wb25lbnRQcm9wZXJ0aWVzAGdldF9FeGVjdXRhYmxlcwBTZXR0aW5ncwBTeXN0
ZW0uV2luZG93cy5Gb3JtcwBTeXN0ZW0uQ29sbGVjdGlvbnMAZ2V0X0Nvbm5lY3Rpb25zAFN1Y2Nl
c3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAElEVFNFdmVudHMAZ2V0X0lubmVyT2JqZWN0AGdldF9E
ZWZhdWx0AERpYWxvZ1Jlc3VsdABzZXRfVGFza1Jlc3VsdABUYXNrSG9zdABOZXcAZ2V0X05vdwBT
aG93AE1lc3NhZ2VCb3gAZ2V0X0Fzc2VtYmx5AER0c1Byb3BlcnR5AAAddABlAHMAdABvAHcAeQAg
AFAAYQBrAGkAZQB0AAAnUABhAGMAawBhAGcAZQAgAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAC08A
TABFAEQAQgAAgN9QAHIAbwB2AGkAZABlAHIAIAA9ACAAUwBRAEwATwBMAEUARABCAC4AMQA7AEkA
bgB0AGUAZwByAGEAdABlAGQAIABTAGUAYwB1AHIAaQB0AHkAIAA9ACAAUwBTAFAASQA7ACAASQBu
AGkAdABpAGEAbAAgAEMAYQB0AGEAbABvAGcAIAA9ACAAQQBkAHYAZQBuAHQAdQByAGUAVwBvAHIA
awBzADIAMAAwADgAUgAyADsARABhAHQAYQAgAFMAbwB1AHIAYwBlACAAPQAgACgAbABvAGMAYQBs
ACkAOwAAGUMAbwBuAE0AZwByAF8ATwBMAEUARABCAABvTwBMAEUAIABEAEIAIABjAG8AbgBuAGUA
YwB0AGkAbwBuACAAdABvACAAdABoAGUAIABBAGQAdgBlAG4AdAB1AHIAZQBXAG8AcgBrAHMAMgAw
ADAAOABSADIAIABkAGEAdABhAGIAYQBzAGUALgAAHVMAVABPAEMASwA6AFMARQBRAFUARQBOAEMA
RQAAQXMAZQBsAGUAYwB0ACAAUwBJAEYASQBTAE8AIABTAGUAcQB1AGUAbgBjAGUAIABDAG8AbgB0
AGEAaQBuAGUAcgAAG1MAVABPAEMASwA6AFMAUQBMAFQAYQBzAGsAAAlOAGEAbQBlAAAXQwByAGUA
YQB0AGUAIABWAGkAZQB3AAAXRABlAHMAYwByAGkAcAB0AGkAbwBuAACAgUQAcgBvAHAAcwAgAGEA
bgBkACAAQwByAGUAYQB0AGUAIABTAFEATAAgAFYAaQBlAHcAIAB3AGgAaQBjAGgAIABiAGEAcwBl
AGQAIABvAG4AIABBAGQAdgBlAG4AdAB1AHIAZQB3AG8AcgBrAHMAIABkAGEAdABhAGIAYQBzAGUA
ABVDAG8AbgBuAGUAYwB0AGkAbwBuAAAlUwBxAGwAUwB0AGEAdABlAG0AZQBuAHQAUwBvAHUAcgBj
AGUAAG9DAFIARQBBAFQARQAgAE8AUgAgAFIARQBQAEwAQQBDAEUAIABWAEkARQBXACAAdgBfAFMA
YQBsAGUAcwAgAGEAcwAgAHMAZQBsAGUAYwB0ACoAIABmAHIAbwBtACAARQBtAHAAbABvAHkAZQBl
AAAhcwBlAGwAZQBjAHQAIABmAHIAbwBtACAAdgBpAGUAdwAAK1MARQBMAEUAQwBUACAAKgAgAEYA
UgBPAE0AIAB2AF8AUwBhAGwAZQBzAAAXZABlAGwAZQB0AGUAIABWAGkAZQB3AAAjRABSAE8AUAAg
AFYASQBFAFcAIAB2AF8AUwBhAGwAZQBzAAAlUwBUAE8AQwBLADoAUABpAHAAZQBsAGkAbgBlAFQA
YQBzAGsAAC1zAGUAbABlAGMAdABTAEkARgBJAFMATwAgAGQAYQB0AGEAIABGAGwAbwB3AAAvTwBM
AEUARABCACAAQwBvAG4AbgBlAGMAdABpAG8AbgBNAGEAbgBhAGcAZQByAAATRABFAFMAIABPAEwA
RQBEAEIAABdPAEwARQBEAEIAUwBvAHUAcgBjAGUAADFEAFQAUwBBAGQAYQBwAHQAZQByAC4ATwBs
AGUARABiAFMAbwB1AHIAYwBlAC4AMgAAgJ9DADoAXABNAHkARABlAHYAZQBsAG8AcABtAGUAbgB0
AFwATQB5AFQAZQBzAHQAUgBlAHAAbwBcAFMAUwBJAFMAXABNAHkAVABlAHMAdABcAE0AeQBUAGUA
cwB0AHAAawBnAF8AYwByAGUAYQB0AGUAXwBEAFQAUwBfAFMAZQBxAF8AUwBxAGwAXwBUAGEAcwBr
AHMALgBkAHQAcwB4AABxUwBUAF8AYgAyADIANQBjAGMAZAA4ADQAZgBmAGMANAA0ADMAYgA5ADMA
ZAAzAGUAYwA0ADcAMwA5ADUAOABmAGEANAAxAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBz
AG8AdQByAGMAZQBzAAAAABCzsT16Gq9EviIJpBbT9ogABCABAQgDIAABBSABARERBCABAQ4FIAEB
EWUFIAEBEnkPBwcSQRJFEkkSSRJJEjAOBiABARGAlQUAABGAmQYgAQERgJkEIAEBAgUgABKAnQYg
ARKAoQ4FIAASgKUGIAESgKkOBSAAEoCxBiABEoC1HAUgAgEcHAMgABwJIAMBDhJFEoC5BSAAEoC9
AyAADgYAARGAxQ4HAAESeRGAyQUgABKAzQcgAgEOEoDNCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAE
AQAAAAETARwDBhJdAwYSYQMGEhACBggDBhE0BAAAEl0EAAASYQUAAQESYQQAABIQAwAAAQQgABIU
BCAAEhgEIAASHAQIABJdBAgAEmEECAASEAMIAA4ECAASHAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5v
bkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfYjIyNWNjZDg0ZmZjNDQzYjkzZDNlYzQ3
Mzk1OGZhNDEAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMAAASQEAGi5ORVRGcmFtZXdvcmss
VmVyc2lvbj12NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUI
AQANAAAAAAAIAQBlAAAAAAAIAQBoAAAAAAAIAQAOAAAAAAAIAQALAAAAAAAIAQAMAAAAAAApAQAk
RTFBQ0M3MkItMTRDRS00QTkxLUI0NUYtRTg3NzczQzFBQkI1AABfAQBaU3lzdGVtLk9iamVjdCwg
bXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tl
bj1iNzdhNWM1NjE5MzRlMDg5AAApAQAkQzVDODgyN0ItNjBFQy00QjVBLTlEMTQtNzI0QTU2ODM4
MTFGAAAJAQAESXRlbQAAKQEAJDc3QUNGM0MzLTE5OTEtNDg4Mi1CNTc1LUYwQ0YwQ0U4MjRBMAAA
KQEAJDc2Qzg0RTJCLUMwQUItNDkzMy1BQzI1LUQ5RUUyMUI1QTI4MAAAKQEAJDhBRDJCRjIxLUE0
N0YtNDJBQi1CQTg0LTVFMEI1MUU1RkRDMgAAKQEAJDZGNUJENzVBLUM0MEMtNDg2MC1BRTI1LTU1
RUI3Q0YzM0RCMAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVh
ZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tl
eVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VT
ZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAOA/AAAAAAAAAAAAAPo/AAAAIAAAAAAAAAAAAAAAAAAA
AAAAAAAAAADsPwAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
ABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQCwZ6AcAAABALBnoBw/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAwADAANABi
ADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEA
bQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABf
AGIAMgAyADUAYwBjAGQAOAA0AGYAZgBjADQANAAzAGIAOQAzAGQAMwBlAGMANAA3ADMAOQA1ADgA
ZgBhADQAMQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA3ADMAMgA4
AC4AMgA2ADUANAA0AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfAGIA
MgAyADUAYwBjAGQAOAA0AGYAZgBjADQANAAzAGIAOQAzAGQAMwBlAGMANAA3ADMAOQA1ADgAZgBh
ADQAMQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAA
eQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAwAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBt
AGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAA
UwBUAF8AYgAyADIANQBjAGMAZAA4ADQAZgBmAGMANAA0ADMAYgA5ADMAZAAzAGUAYwA0ADcAMwA5
ADUAOABmAGEANAAxAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMA
VABfAGIAMgAyADUAYwBjAGQAOAA0AGYAZgBjADQANAAzAGIAOQAzAGQAMwBlAGMANAA3ADMAOQA1
ADgAZgBhADQAMQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4A
NwAzADIAOAAuADIANgA1ADQANAAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4ANwAzADIAOAAuADIANgA1ADQANAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAAAMMAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Robert"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{CF822BD9-763F-4A6E-ADA8-818142C3E52E}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Robert"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_d1fa5757631b4cb6b1176c801b5fb0fe"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_d1fa5757631b4cb6b1176c801b5fb0fe.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{EF074F8F-9E19-473E-9582-2E724D4B42A2}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_d1fa5757631b4cb6b1176c801b5fb0fe</RootNamespace>
    <AssemblyName>ST_d1fa5757631b4cb6b1176c801b5fb0fe</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL">
      <EmbedInteropTypes>True</EmbedInteropTypes>
    </Reference>
    <Reference Include="Microsoft.SQLServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=x86">
      <EmbedInteropTypes>True</EmbedInteropTypes>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts;
using System.Windows.Forms;
#endregion

namespace ST_d1fa5757631b4cb6b1176c801b5fb0fe
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            try
            {
                //Deklaracja zmiennych
                Microsoft.SqlServer.Dts.Runtime.Application generator;
                Microsoft.SqlServer.Dts.Runtime.Package package;
                Microsoft.SqlServer.Dts.Pipeline.Wrapper.MainPipe dft;
                Microsoft.SqlServer.Dts.Runtime.TaskHost th;
                Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData100 sourceComponent;
                Microsoft.SqlServer.Dts.Pipeline.Wrapper.CManagedComponentWrapper sourceComponentInstance;
                Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData100 destinationComponent;
                Microsoft.SqlServer.Dts.Pipeline.Wrapper.CManagedComponentWrapper destinationComponentInstance;



                string DtsxName = "SSIS_API_Testy_Wynik"; // DateTime.Now.ToString().Replace(":", "_").Replace(" ", "_").Replace(".", "_");



                //Stworzenie Aplikacji
                generator = new Microsoft.SqlServer.Dts.Runtime.Application();



                //Za�adowanie pakietu dtsx
                package = generator.LoadPackage("C:\\MyDevelopment\\MyTestRepo\\SSIS\\MyTest\\Template.dtsx", null);



                //Przypisanie zmiennych do pakietu
                package.Parameters["TableNameSource"].Value = "[dbo].[VSTest_Source]";                   //Dts.Variables["User::TableName"].Value.ToString();
                package.Parameters["TableNameDestination"].Value = "[dbo].[VSTest_Destination]";              //Dts.Variables["User::TableName"].Value.ToString();



                //Konfiguracji Data Flow Task w pakiecie
                Executable e = package.Executables[0];
                th = e as Microsoft.SqlServer.Dts.Runtime.TaskHost;
                dft = th.InnerObject as Microsoft.SqlServer.Dts.Pipeline.Wrapper.MainPipe;



                //Konfiguracjia Source Component 
                sourceComponent = dft.ComponentMetaDataCollection["OLE DB Source"];
                sourceComponentInstance = sourceComponent.Instantiate();
                if (sourceComponent.RuntimeConnectionCollection.Count > 0)
                {
                    sourceComponent.RuntimeConnectionCollection[0].ConnectionManager = DtsConvert.GetExtendedInterface(package.Connections["VisualStudio"]);
                    sourceComponent.RuntimeConnectionCollection[0].ConnectionManagerID =
                    package.Connections["VisualStudio"].ID;
                }
                sourceComponentInstance.AcquireConnections(null);
                sourceComponentInstance.ReinitializeMetaData();
                sourceComponentInstance.ReleaseConnections();



                //Konfiguracjia Destination Component 
                destinationComponent = dft.ComponentMetaDataCollection["OLE DB Destination"];
                destinationComponentInstance = destinationComponent.Instantiate();
                if (destinationComponent.RuntimeConnectionCollection.Count > 0)
                {
                    destinationComponent.RuntimeConnectionCollection[0].ConnectionManager = DtsConvert.GetExtendedInterface(package.Connections["VisualStudio"]);
                    destinationComponent.RuntimeConnectionCollection[0].ConnectionManagerID = package.Connections["VisualStudio"].ID;
                }
                destinationComponentInstance.AcquireConnections(null);
                destinationComponentInstance.ReinitializeMetaData();
                destinationComponentInstance.ReleaseConnections();



                //Mapowanie Kolumn
                IDTSOutputColumnCollection100 SourceColumns = sourceComponent.OutputCollection[0].OutputColumnCollection;
                IDTSInput100 DestinationInputCollection = destinationComponent.InputCollection[0];
                IDTSVirtualInput100 DestinationVirtualInput = DestinationInputCollection.GetVirtualInput();
                foreach (IDTSVirtualInputColumn100 column in DestinationVirtualInput.VirtualInputColumnCollection)
                {
                    destinationComponentInstance.SetUsageType(
                    destinationComponent.InputCollection[0].ID,
                    DestinationVirtualInput,
                    column.LineageID,
                    DTSUsageType.UT_READONLY
                    );
                }
                for (int i = 0; i < DestinationInputCollection.InputColumnCollection.Count; i++)
                {
                    string dstColumnName = DestinationInputCollection.InputColumnCollection[i].Name;
                    if (
                    !DestinationInputCollection.ID.Equals(null)
                    && !DestinationInputCollection.InputColumnCollection[dstColumnName].ID.Equals(null)
                    && !DestinationInputCollection.ExternalMetadataColumnCollection[dstColumnName].ID.Equals(null)
                    )
                    {
                        destinationComponentInstance.MapInputColumn(
                        DestinationInputCollection.ID,
                        DestinationInputCollection.InputColumnCollection[dstColumnName].ID, DestinationInputCollection.ExternalMetadataColumnCollection[dstColumnName].ID
                        );
                    }
                }



                //Zapis pakietu do pliku dtsx.
                generator.SaveToXml("C:\\MyDevelopment\\MyTestRepo\\SSIS\\MyTest\\" + DtsxName + ".dtsx", package, null);




                Dts.Variables["User::DtsxName"].Value = DtsxName.ToString();





                //Uruchomienie pakietu
                //    package.Execute();
                //    package.Dispose();



            }
            catch
            {


            }

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_d1fa5757631b4cb6b1176c801b5fb0fe</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_d1fa5757631b4cb6b1176c801b5fb0fe</msb:DisplayName>
    <msb:ProjectId>{460E7343-7087-4A54-8600-C805CAD84FAD}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_d1fa5757631b4cb6b1176c801b5fb0fe.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d1fa5757631b4cb6b1176c801b5fb0fe.Properties.Settings.get_Default():ST_d1fa5757631b4cb6b1176c801b5fb0fe.Properties.Sett" +
    "ings")]

namespace ST_d1fa5757631b4cb6b1176c801b5fb0fe.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_d1fa5757631b4cb6b1176c801b5fb0fe")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_d1fa5757631b4cb6b1176c801b5fb0fe")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d1fa5757631b4cb6b1176c801b5fb0fe.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d1fa5757631b4cb6b1176c801b5fb0fe.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d1fa5757631b4cb6b1176c801b5fb0fe.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_d1fa5757631b4cb6b1176c801b5fb0fe.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_d1fa5757631b4cb6b1176c801b5fb0fe.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_d1fa5757631b4cb6b1176c801b5fb0fe.dll">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
DwA2CwAABgDUBZsIBgA+BpsIBgAfBpsIBgARB5sIBgC7BpsIBgDUBpsIBgDrBZsIBgAGBlgHCgDv
BpoHCgD0BJoHDgBYCHYEDgACBHYEBgBpCqILBgAfBCYIBgBLDCYIBgAtCCYIBgCKBZAKBgChCeIK
BgCRCXkIEgA8BdUHEgC7BdUHEgAQBWQIBgBhBcIKBgB8BaMKBgC/BCYIBgCqBqMKBgByBqMKBgBR
BaMKBgBbBpsIBgATBKILDgAYDHYEDgDvC3YEDgBfCnYEDgCGC3YEBgBAAiYIDgArBHYEDgCODHYE
DgDfC3YEDgDjCXYEDgCDDHYEBgB0ByYICgDDB5oHDgB4C3YEDgAKBHYEBgA2BCYIBgC6DJsIAAAA
AJ0CAAAAAAEAAQABABAAPgjaAzkAAQABAAAAEADpCkULTQABAAMAAAEQAJILRQtpAAMABwChEAAA
RgodCgAABAAKAAEBAACfBB0KUQAEAAoAoRAAAAEAHQoAAAgACgChEAAAiAAdCgAACAAQAKEQAADE
AR0KAAAIABEAoRAAAD0AHQoAAAgAGgChEAAAqwAdCgAACAAcAKEQAADfAR0KAAAIAB0AoRAAAFUB
HQoAAAgAJAChEAAAWwAdCgAACAAlAKEQAADTAB0KAAAIACoAoRAAALYBHQoAAAgALQChEAAAKgAd
CgAACAAtAKEQAAAAAh0KAAAIAC0AoRAAAGwBHQoAAAgALwChEAAAFAEdCgAACAAwAKEQAAAaAB0K
AAAIADAAoRAAAIQBHQoAAAgAMgChEAAAMgEdCgAACAA3AKEQAADsAR0KAAAIADoAoRAAAG4AHQoA
AAgAPAChEAAA8AAdCgAACAA+AKEQAACWBB0KAAAIAEAAoRAAAJ0B9QkAAAgAQAADAQAACgwAAFEA
CABAABEAMgiiAREA5ASmAREAygOqAQYGjwOuAVaAgwOxAVaAVwOxAVaApgKxAQYGjwOuAVaA+gu1
AVaAxAS1AVAgAAAAAIYARAgGAAEAzCMAAAAAhhiDCgYAAQDUIwAAAACDGIMKBgABANwjAAAAAJMI
nQm5AQEACCQAAAAAkwjMBL4BAQAPJAAAAACTCNgEwwEBABckAAAAAJYIUgzJAQIAHiQAAAAAhhiD
CgYAAgAmJAAAAACRGIkKzgECAAAAAAADAAYYDgIGAAIAAAAAAAMQxg1oCdIBAgAAAAAAAxDGDXwJ
1wEDAAAAAAADEMYFMAXcAQQAAAAAAAMABhhSAgYABQAAAAAAAxDGDUgJ4QEFAAAAAAADEMYNHQjm
AQYAAAAAAAMABhgoAgYACAAAAAAAAxDGBZcDBgAIAAAAAAADAAYYeAIGAAgAAAAAAAMQxgW3BOwB
CAAAAAAAAwAGGGsCBgANAAAAAAADEMYFxQtaAA0AAAAAAAMQxgXYCwYADgAAAAAAAwAGGDQCBgAO
AAAAAAADEMYFSQj3AQ4AAAAAAAMQxg2xAv8BEgAAAAAAAxDGDbgCAQASAAAAAAADEMYNHQgDAhMA
AAAAAAMQxg2xAv8BFQAAAAAAAxDGDbgCAQAVAAAAAAADAAYYDgIGABYAAAAAAAMQxgWXDAkCFgAA
AAAAAxDGDfIIDgIXAAAAAAADAAYYGwIGABgAAAAAAAMQxg3NCBMCGAAAAAAAAxDGDR0IGAIZAAAA
AAADEMYNsQL/ARsAAAAAAAMQxg24AgEAGwAAAAAAAwAGGEYCBgAcAAAAAAADEMYNWgSFABwAAAAA
AAMQxg1jBBAAHQAAAAAAAxDGDR0IHgIeAAAAAAADAAYYKAIGACAAAAAAAAMQxg15DP8BIAAAAAAA
AwAGGIQCBgAgAAAAAAADEMYNLQkkAiAAAAAAAAMQxg0dCCkCIQAAAAAAAwAGGCgCBgAjAAAAAAAD
EMYNrQgvAiMAAAAAAAMABhiRAgYAJAAAAAAAAxDGDQUDhQAkAAAAAAADEMYNHQMQACUAAAAAAAMQ
xg3JCTQCJgAAAAAAAxDGDd8JOQInAAAAAAADEMYNHQg/AigAAAAAAAMABhgoAgYAKgAAAAAAAxDG
DXkM/wEqAAAAAAADAAYYkQIGACoAAAAAAAMQxg0MCUUCKgAAAAAAAwAGGF4CBgArAAAAAAADEMYN
vwL/ASsAAAAAAAMABhgoAgYAKwAAAAAAAxDGBXUKSgIrAAAAAQBSBwAgAAAAAAAgAAAAAAAgAAAA
AAAgAAAAAAAgAAAAAAEgAQCwDAAgAAAAAAEAAQBOAwEgAgA6DAEAAwDNAgEABACsBAEgAQCOCAAg
AAAAAAEAAQBOAwEAAgDyAgEAAwDYAgEAAQABAwAgAAAAAAEgAQCwDAEAAQABAwAgAAAAAAAgAAAA
AAAgAAAAAAAgAAAAAAEgAQCwDAEAAQABAwAgAAAAAAEgAQBsBAAgAAAAAAEgAQCwDAAgAAAAAAAg
AAAAAAEgAQCwDAAgAAAAAAAgAAAAAAEgAQA1AwAgAAAAAAEgAQCxCQAgAAAAAAEgAQCwDAAgAAAA
AAAgAAAAAAUAJAAHAEAACACJAAoAQAALAIkADABAAA0AiQAOAEAADwCJABIAQAATAIkAFACJABUA
RAAWAEAAFwCJABgAQAAZAEAAGgCJABsAVAAJAIMKAQARAIMKBgAZAIMKCgApAIMKEAAxAIMKEAA5
AIMKEABBAIMKEABJAIMKEABRAIMKEABZAIMKEABhAIMKEABpAIMKBgCpAIMKBgDJAIMKFQDZAIMK
BgDhAIMKEADxAIMKGwD5AIMKBgD5AIMKIQABAYMKAQAJAYMKEAB5AIMKBgB5AP4DRACBAOsLTQAh
AR0IUwApAUgHWgCBAIILXwAxAR0IZQBJASoMbACBALULcABRAR0IdgBhAbUDfQBZAbEChQCJAG0M
bACJAKcMiQCRACgFBgA5AZsLjQBpASMMkgB5ABMImQBxAAIMowBxAXQLqQB5AR0IrwCZAHIHhQCB
AUgHWgBxAV4MAQBxAIMKBgCZAIMKBgDpAEgEtgDpALYMvgCxAIMKxADRAIMKBgAIABQA3gAIABgA
4wAIABwA6AAIACQA3gAIACgA4wApAHMA3wIuAAsAtwIuABMAwAIuABsA3wIuACMA6AIuACsAEQMu
ADMAEQMuADsAEQMuAEMA6AIuAEsAFwMuAFMAEQMuAFsALgNDAGMA4wBJAHMA3wJhAHsA4wBjAGsA
4wCJAKMAeAOjAHsA4wCjAIMAGgSjAIsARASjAJMA4wCpAKMAgQPDAHsA4wDDAJsApATJAKMAkwPj
AHsA4wDjAIMABAXjAJMA4wDpAKMAnAMDAXsA4wADAasALgUDAYMAOAUDAZMA4wAJAaMA0gMjAXsA
4wAjAYMAGgQjAZMA4wApAaMAnANDAXsA4wBDAYMAYgVDAZMA4wBJAaMA0gNgAaMAeANjAXsA4wBj
AYMAjAVjAasALgVjAZMA4wBpAaMA5AOAAaMAgQODAXsA4wCDAYMAtgWDAZMA4wCJAaMA7QOgAaMA
igOjAXsA4wCjAYMA4AWjAasALgWjAZMA4wCpAaMAnAPDAXsA4wDDAYMACgbDAZMA4wDJAaMA0gPg
AaMAkwPjAXsA4wDjAYMANAbjAasALgXjAZMA4wDpAaMA9gMAAqMAnAMDAnsA4wADAoMAXgYDApMA
4wAJAqMAnAMjAnsA4wAjAoMAiAYjApMA4wApAqMA9gNAAqMApQNDAnsA4wBDAoMAsgZDApMA4wBJ
AqMA5ANjAnsA4wBjAoMA3AZjAqsALgVjApMA4wBpAqMAnAOAAqMArgODAnsA4wCDAqsALgWDAoMA
BgeDApMA4wCJAqMApQOjAnsA4wCjAoMAMAejApMA4wCpAqMA/wPAAqMAtwPDAnsA4wDDAoMAWgfD
ApMA4wDJAqMAeAPgAqMAwAPjAnsA4wDjAoMAhAfjAqsALgXjApMA4wDpAqMAnAMDA3sA4wADA4MA
rgcDA5MA4wAJA6MA9gMgA6MAyQMjA3sA4wAjA4MA2AcjA5MA4wApA6MA/wNAA6MA0gNDA3sA4wBD
A6sALgVDA4MAAghDA5MA4wBJA6MACARgA6MA0gNjA3sA4wBjA4sARARjA4MAMAdjA5MA4wCAA6MA
nAODA3sA4wCDA4MALAiDA5MA4wCgA6MA0gPAA6MA0gMABKMA2wMgBKMA5ANgBKMA7QOABKMAnAOg
BKMA0gPABKMA0gMABaMA9gMgBaMA9gNABaMAnAOABaMA9gPABaMA5APgBaMAnAMgBqMApQNgBqMA
/wOABqMA/wOgBqMAeAPABqMAeAPgBqMAnAMgB6MA9gNgB6MA/wOgB6MACATgB6MAEQQFAO0ABwDt
AAkA7QALAO0ADQDtAA8A7wARAO0AFQDtABsA8QAdAO0AJwDtACkA7wAtAO0ALwDtADEA7QAzAO0A
NQDvADkA8wA7APMAPQDtAD8A7wBBAO0AQwDtAEUA7wBHAO0ASQDzAEsA8wBNAO0ATwDtAFEA7QBT
AO8AVQDtAFcA9QAnAAMAAQAEAAMABwAEAAgABwAKAAgACwAJAAwACgANAA0ADgAOAA8AEAASABIA
EwATABUAFAAWABUAFwAXABgAGQAZABoAAAChCU8CAADsBFQCAABWDFkCAABsCV4CAACACWMCAABM
CWgCAAAhCG0CAABUA3MCAAAhCHcCAABUA3MCAAAXCX0CAADRCIICAAAhCIcCAABUA3MCAABxBI0C
AAAhCJECAAB9DHMCAAAxCZcCAAAhCJwCAACxCKICAAA6A40CAADjCacCAAAhCKwCAAB9DHMCAAAQ
CbICAADOAnMCAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcAAgALAAkAAgAMAAsAAgAPAA0AAgAQAA8A
AgAaABEAAQAbABEAAgAcABMAAgAdABUAAQAeABUAAgAhABcAAgAjABkAAgAkABsAAgAlAB0AAQAm
AB0AAgAoAB8AAQApAB8AAgAqACEAAgAsACMAAgAuACUAAgAvACcAAgAxACkAAgAzACsAAQA0ACsA
AgA1AC0AAQA2AC0AAgA3AC8AAgA5ADEAAgA7ADMAAgA9ADUABIAAAAEAAACgHNVoAAAAAAAA2gMA
AAQAAAAAAAAAAAAAAMwArAMAAAAADgAAAAAAAAAAAAAA1QB7BwAAAAAOAAAAAAAAAAAAAADVAGQD
AAAAAAQAAAAAAAAAAAAAAMwAJggAAAAAAAAAAAEAAADzCgAAHQACAAAAAAAASURUU0NvbXBvbmVu
dE1ldGFEYXRhMTAwAElEVFNQaXBlbGluZTEwMABJRFRTT2JqZWN0TW9kZWwxMDAASURUU0V4dGVy
bmFsTWV0YWRhdGFDb2x1bW4xMDAASURUU0lucHV0Q29sdW1uMTAwAElEVFNWaXJ0dWFsSW5wdXRD
b2x1bW4xMDAASURUU0NvbXBvbmVudE1ldGFEYXRhQ29sbGVjdGlvbjEwMABJRFRTRXh0ZXJuYWxN
ZXRhZGF0YUNvbHVtbkNvbGxlY3Rpb24xMDAASURUU0lucHV0Q29sdW1uQ29sbGVjdGlvbjEwMABJ
RFRTVmlydHVhbElucHV0Q29sdW1uQ29sbGVjdGlvbjEwMABJRFRTT3V0cHV0Q29sdW1uQ29sbGVj
dGlvbjEwMABJRFRTUnVudGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uMTAwAElEVFNJbnB1dENvbGxl
Y3Rpb24xMDAASURUU091dHB1dENvbGxlY3Rpb24xMDAASURUU1J1bnRpbWVDb25uZWN0aW9uMTAw
AElEVFNDb25uZWN0aW9uTWFuYWdlcjEwMABJRFRTT2JqZWN0MTAwAElEVFNEZXNpZ250aW1lQ29t
cG9uZW50MTAwAElEVFNJbnB1dDEwMABJRFRTVmlydHVhbElucHV0MTAwAElEVFNPdXRwdXQxMDAA
X1Z0YmxHYXAxXzEwAF9WdGJsR2FwMl8xMQBfVnRibEdhcDFfMQBfVnRibEdhcDRfMQBJbnQzMgBf
VnRibEdhcDFfMgBfVnRibEdhcDJfMgBfVnRibEdhcDFfMTMAX1Z0YmxHYXAzXzEzAF9WdGJsR2Fw
Ml8zAF9WdGJsR2FwMV8xNgBfVnRibEdhcDFfOAA8TW9kdWxlPgBVVF9JR05PUkVEAGdldF9JRABz
ZXRfSUQAZ2V0X0xpbmVhZ2VJRABsTGluZWFnZUlEAGxFeHRlcm5hbE1ldGFkYXRhQ29sdW1uSUQA
bElucHV0Q29sdW1uSUQAcElEAGdldF9Db25uZWN0aW9uTWFuYWdlcklEAHNldF9Db25uZWN0aW9u
TWFuYWdlcklEAHBic3RyQ29ubmVjdGlvbk1hbmFnZXJJRABsSW5wdXRJRABVVF9SRUFEV1JJVEUA
TWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAFVUX1JFQURPTkxZAHZhbHVlX18AUmVpbml0
aWFsaXplTWV0YURhdGEAbXNjb3JsaWIAR2V0RXh0ZW5kZWRJbnRlcmZhY2UAZGVmYXVsdEluc3Rh
bmNlAFNUX2QxZmE1NzU3NjMxYjRjYjZiMTE3NmM4MDFiNWZiMGZlAExvYWRQYWNrYWdlAFZhcmlh
YmxlAElFbnVtZXJhYmxlAElEaXNwb3NhYmxlAEV4ZWN1dGFibGUAUnVudGltZVR5cGVIYW5kbGUA
R2V0VHlwZUZyb21IYW5kbGUAZ2V0X05hbWUAc2V0X05hbWUAcGJzdHJOYW1lAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuRHRzLlJ1bnRpbWUATWFpblBpcGUARFRTVXNhZ2VUeXBlAGVVc2FnZVR5cGUAU2V0
VXNhZ2VUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJl
AFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBEaXNw
b3NlAEluc3RhbnRpYXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAERpc3BJZEF0dHJpYnV0ZQBDb21w
aWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBHdWlkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVB
dHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNz
ZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFt
ZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVz
Y3JpcHRpb25BdHRyaWJ1dGUARGVmYXVsdE1lbWJlckF0dHJpYnV0ZQBUeXBlSWRlbnRpZmllckF0
dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAENvQ2xhc3NBdHRyaWJ1dGUA
QXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNT
Y3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVu
dGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAc2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1l
LlZlcnNpb25pbmcAVG9TdHJpbmcATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lz
dGVtLkNvbXBvbmVudE1vZGVsAFNUX2QxZmE1NzU3NjMxYjRjYjZiMTE3NmM4MDFiNWZiMGZlLmRs
bABTYXZlVG9YbWwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBN
YXBJbnB1dENvbHVtbgBBcHBsaWNhdGlvbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xv
YmFsaXphdGlvbgBwVHJhbnNhY3Rpb24AU3lzdGVtLlJlZmxlY3Rpb24AZ2V0X0NvbXBvbmVudE1l
dGFEYXRhQ29sbGVjdGlvbgBnZXRfRXh0ZXJuYWxNZXRhZGF0YUNvbHVtbkNvbGxlY3Rpb24AZ2V0
X0lucHV0Q29sdW1uQ29sbGVjdGlvbgBnZXRfVmlydHVhbElucHV0Q29sdW1uQ29sbGVjdGlvbgBn
ZXRfT3V0cHV0Q29sdW1uQ29sbGVjdGlvbgBnZXRfUnVudGltZUNvbm5lY3Rpb25Db2xsZWN0aW9u
AGdldF9JbnB1dENvbGxlY3Rpb24AZ2V0X091dHB1dENvbGxlY3Rpb24AQ3VsdHVyZUluZm8AZ2V0
X1Jlc291cmNlTWFuYWdlcgBwcElEVFNDb25uZWN0aW9uTWFuYWdlcgBnZXRfQ29ubmVjdGlvbk1h
bmFnZXIAc2V0X0Nvbm5lY3Rpb25NYW5hZ2VyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRp
bWUuV3JhcHBlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZS5XcmFwcGVyAENNYW5h
Z2VkQ29tcG9uZW50V3JhcHBlcgBQYXJhbWV0ZXIASUVudW1lcmF0b3IAR2V0RW51bWVyYXRvcgAu
Y3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2
aWNlcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1Rf
ZDFmYTU3NTc2MzFiNGNiNmIxMTc2YzgwMWI1ZmIwZmUuUHJvcGVydGllcy5SZXNvdXJjZXMucmVz
b3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUX2QxZmE1NzU3NjMxYjRjYjZiMTE3NmM4MDFiNWZiMGZl
LlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBnZXRfRXhlY3V0YWJsZXMAU2V0dGluZ3MARXF1YWxz
AFN5c3RlbS5Db2xsZWN0aW9ucwBnZXRfQ29ubmVjdGlvbnMAQWNxdWlyZUNvbm5lY3Rpb25zAFJl
bGVhc2VDb25uZWN0aW9ucwBnZXRfUGFyYW1ldGVycwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVz
dWx0cwBJRFRTRXZlbnRzAENvbmNhdABnZXRfSW5uZXJPYmplY3QAcElEVFNWaXJ0dWFsSW5wdXRP
YmplY3QAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tSZXN1bHQAZ2V0X0N1cnJlbnQAZ2V0X0NvdW50AER0
c0NvbnZlcnQAVGFza0hvc3QAR2V0VmlydHVhbElucHV0AE1vdmVOZXh0AEluZGV4AGdldF9Bc3Nl
bWJseQAAAClTAFMASQBTAF8AQQBQAEkAXwBUAGUAcwB0AHkAXwBXAHkAbgBpAGsAAGtDADoAXABN
AHkARABlAHYAZQBsAG8AcABtAGUAbgB0AFwATQB5AFQAZQBzAHQAUgBlAHAAbwBcAFMAUwBJAFMA
XABNAHkAVABlAHMAdABcAFQAZQBtAHAAbABhAHQAZQAuAGQAdABzAHgAAB9UAGEAYgBsAGUATgBh
AG0AZQBTAG8AdQByAGMAZQAAK1sAZABiAG8AXQAuAFsAVgBTAFQAZQBzAHQAXwBTAG8AdQByAGMA
ZQBdAAApVABhAGIAbABlAE4AYQBtAGUARABlAHMAdABpAG4AYQB0AGkAbwBuAAA1WwBkAGIAbwBd
AC4AWwBWAFMAVABlAHMAdABfAEQAZQBzAHQAaQBuAGEAdABpAG8AbgBdAAAbTwBMAEUAIABEAEIA
IABTAG8AdQByAGMAZQAAGVYAaQBzAHUAYQBsAFMAdAB1AGQAaQBvAAAlTwBMAEUAIABEAEIAIABE
AGUAcwB0AGkAbgBhAHQAaQBvAG4AAFFDADoAXABNAHkARABlAHYAZQBsAG8AcABtAGUAbgB0AFwA
TQB5AFQAZQBzAHQAUgBlAHAAbwBcAFMAUwBJAFMAXABNAHkAVABlAHMAdABcAAALLgBkAHQAcwB4
AAAdVQBzAGUAcgA6ADoARAB0AHMAeABOAGEAbQBlAABxUwBUAF8AZAAxAGYAYQA1ADcANQA3ADYA
MwAxAGIANABjAGIANgBiADEAMQA3ADYAYwA4ADAAMQBiADUAZgBiADAAZgBlAC4AUAByAG8AcABl
AHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAABK2SzGqazgSq+kVnfBqixCAAQgAQEI
AyAAAQUgAQEREQQgAQEOBSABARFhBSABARJ1BSACAQ4OHAcPEj0SQRIcEhQSHBIUDhIwEmASRRJk
EkkIDggIIAISQQ4SgI0FIAASgJEGIAESgJUOBCABARwFIAASgJkGIAESgKEcAyAAHAUgABKAqQYg
ARKArRwHAAEScBKArQMgAA4DIAACBCABAhwGAAMODg4OCSADAQ4SQRKAjQUgABKAuQUgABKAvQYg
ARKAwRwHAAESdRGAxQUgABKAyQcgAgEOEoDJCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAQC
AAAAARwBGwEZAROAqywAAIClU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLkN1c3RvbU1h
cnNoYWxlcnMuRW51bWVyYXRvclRvRW51bVZhcmlhbnRNYXJzaGFsZXIsIEN1c3RvbU1hcnNoYWxl
cnMsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iMDNm
NWY3ZjExZDUwYTNhAAMGElkDBhJdAwYSEAIGCAMGERgDBhF0BAAAElkEAAASXQUAAQESXQQAABIQ
AwAAAQQgABI0BCAAEkwEIAASFAQgABJcBSABEhwcCiAEEjgIEmAIERgHIAMSKAgICAMgAAgFIAES
KBwEIAASYAQgABI8BCAAEiwFIAESMBwFIAESOBwEIAASUAUgARJIHAQgABIgBCAAEnAFIAEBEnAF
IAESWBwEIAASaAQgABJFBAgAElkECAASXQQIABIQBAgAEjQECAASTAQIABJcBQgBEhwcAwgACAUI
ARIoHAQIABI8BAgAEiwFCAESMBwDCAAOBQgBEjgcBAgAElAFCAESSBwECAASIAQIABJwBQgBElgc
BAgAEmgIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEA
I1NUX2QxZmE1NzU3NjMxYjRjYjZiMTE3NmM4MDFiNWZiMGZlAAAFAQAAAAAWAQARQ29weXJpZ2h0
IEAgIDIwMjAAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlz
cGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41CAEAZgAAAAAACAEAZwAAAAAACAEAaAAAAAAACAEA
cgAAAAAACAEAAAAAAAAACAEADAAAAAAACAEAEAAAAAAACAEAHgAAAAAACAEAHwAAAAAACAEAIQAA
AAAACAEACwAAAAAACAEAaQAAAAAACAEAagAAAAAACAEAdAAAAAAACAEADQAAAAAACAEAZQAAAAAA
CAEAbAAAAAAACAEA/P///wAAKQEAJEUxQUNDNzJCLTE0Q0UtNEE5MS1CNDVGLUU4Nzc3M0MxQUJC
NQAAXwEAWlN5c3RlbS5PYmplY3QsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9
bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OQAAXwEAJDRCQzJFREI0LTJD
RjAtNDg2Qi04RDA2LUQ1OTc2OEU3OTRGRjVNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGlu
ZS5XcmFwcGVyLkRUU1VzYWdlVHlwZQAAKQEAJEM1Qzg4MjdCLTYwRUMtNEI1QS05RDE0LTcyNEE1
NjgzODExRgAACQEABEl0ZW0AACkBACQ3N0FDRjNDMy0xOTkxLTQ4ODItQjU3NS1GMENGMENFODI0
QTAAACkBACQyQTg0QjA3Qi0wN0ZCLTQxMjktOTk4MS0wRTcyQkEwREY3QzQAACkBACQ4Q0M2REU4
Ny1ERDk3LTRGMDItOTJEQy1EQTQ2MzNBNTBCNjQAACkBACRFQkVCQTU0QS1FQTYxLTQ3NTctOEEx
RS1GMjQ5MzgzQjYxMDYAACkBACQ3MUJGREMyRS1BMjBGLTQyNTgtODc5Qi00RDNBODFFQUIxMDYA
ACkBACQ2MkQyQzY3OS00RkMzLTQ1QTItOEEyNC04RUE0MTNBOUY2ODcAACkBACRFNTNCNTFFRi1B
OTQ1LTRGMkQtQTRENi1BQkQ3NEE5REFGRUYAACkBACQ3NkM4NEUyQi1DMEFCLTQ5MzMtQUMyNS1E
OUVFMjFCNUEyODAAACkBACQ4QUQyQkYyMS1BNDdGLTQyQUItQkE4NC01RTBCNTFFNUZEQzIAACkB
ACRDQjlEMDQ5MC00QkYxLTQ3QUUtODM1MC0zQ0E5QTMyNTJGOTMAACkBACQyNUQzOThCQy0yMTQ5
LTRCNzItQkY0Ri1BOTc3NjE3QjVBQTkAACkBACQxQzU0NDk3OS01MEQ1LTQ0NjUtODg3Mi1DREQx
Q0U1NDI3MEEAACkBACQ2RjVCRDc1QS1DNDBDLTQ4NjAtQUUyNS01NUVCN0NGMzNEQjAAACkBACRB
RDI4NEU1Ri0wMkU2LTQ5MDgtQTk2Qy1BRTI0OEYxOENFMUEAACkBACQ4M0M5RTNCNy0yRjNGLTQ1
N0QtOEUwOS1FRkFDMDhBRTVBMjgAACkBACQzRDgwNTZBOC1DQTQxLTQ4RTQtQTNDMi03NDU0MkRG
Njg2MzQAACkBACQ4QkZFRDQwNS0wMzk0LTQyODMtOEVFNy0wRjY0MEREODlENEQAACkBACQ2RTQ2
NEEwMi1GQzE5LTRCQzItQjM3MS1FQkMwMjZFNTM1RTYAACkBACQ4ODEzRUYwMy0yOTYzLTQzOEYt
OURFQi1ENDQyMTdBMzY0RkEAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJl
c291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWws
IFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1l
UmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAAxNAAAAAAAAAAAAACZNAAAAIAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAYTQAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAA
AAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACA
AAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAABoEAAAA
AAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAA
AQDVaKAcAAABANVooBw/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBp
AGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsAR6AwAA
AQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAwADAANABiADAAAAAa
AAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAA
AAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfAGQAMQBm
AGEANQA3ADUANwA2ADMAMQBiADQAYwBiADYAYgAxADEANwA2AGMAOAAwADEAYgA1AGYAYgAwAGYA
ZQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA3ADMAMgA4AC4AMgA2
ADgAMwA3AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfAGQAMQBmAGEA
NQA3ADUANwA2ADMAMQBiADQAYwBiADYAYgAxADEANwA2AGMAOAAwADEAYgA1AGYAYgAwAGYAZQAu
AGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkA
ZwBoAHQAIABAACAAIAAyADAAMgAwAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBr
AHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8A
ZAAxAGYAYQA1ADcANQA3ADYAMwAxAGIANABjAGIANgBiADEAMQA3ADYAYwA4ADAAMQBiADUAZgBi
ADAAZgBlAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfAGQA
MQBmAGEANQA3ADUANwA2ADMAMQBiADQAYwBiADYAYgAxADEANwA2AGMAOAAwADEAYgA1AGYAYgAw
AGYAZQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANwAzADIA
OAAuADIANgA4ADMANwAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANwAzADIAOAAuADIANgA4ADMANwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAAA4PQAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{91A20D54-2571-4A6D-A1FA-9C6AA636F77D}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_c138c6d2cb1a4aa9b4d163650c883250"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c138c6d2cb1a4aa9b4d163650c883250.Properties.Settings.get_Default():ST_c138c6d2cb1a4aa9b4d163650c883250.Properties.Sett" +
    "ings")]

namespace ST_c138c6d2cb1a4aa9b4d163650c883250.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_c138c6d2cb1a4aa9b4d163650c883250
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            Microsoft.SqlServer.Dts.Runtime.Application app = new Microsoft.SqlServer.Dts.Runtime.Application();
            Package package = new Package();



            // Create ForEachLoop task  
            ForEachLoop ForEachLoop = package.Executables.Add("STOCK:ForEachLoop") as ForEachLoop;
            ForEachLoop.Name = "ForEachLoopName";
            ForEachLoop.Description = "ForEachLoopDesc";



            //Zmienne
            Object Obj = new Object();
            package.Variables.Add("VariableNames", false, "User", Obj);
            Variable VarString = package.Variables.Add("Id", false, "User", String.Empty);



            // Create a VariableMappings and VariableMapping objects.  
            ForEachVariableMappings forEachVariableMappings = ForEachLoop.VariableMappings;
            ForEachVariableMapping forEachVariableMapping = forEachVariableMappings.Add();



            //   Mapowanie 
            forEachVariableMapping.VariableName = @"Id";
            forEachVariableMapping.ValueIndex = 0;



            // ForEachEnumeratorInfo forEachEnumeratorInfo = app.ForEachEnumeratorInfos["Foreach Ado Enumerator"];
            ForEachEnumeratorInfo forEachEnumeratorInfo = app.ForEachEnumeratorInfos["Foreach ADO Enumerator"];
            ForEachEnumeratorHost forEachEnumeratorHost = forEachEnumeratorInfo.CreateNew();
            forEachEnumeratorHost.CollectionEnumerator = true;



            // Create the appropriate type of ForEachEnumerator from the host.  
            ForEachLoop.ForEachEnumerator = forEachEnumeratorHost;
            forEachEnumeratorHost.Properties["DataObjectVariable"].SetValue(forEachEnumeratorHost, "User::VariableNames");
            forEachEnumeratorHost.Properties["Type"].SetValue(forEachEnumeratorHost, 2);



            // app.SaveToXml("C:\\Users\\Robert.Kowalski\\OneDrive - ONWELO S.A\\Pulpit\\Application\\20155.dtsx", package, null);
            app.SaveToXml("C: \\Users\\Bogdan.Marczak\\OneDrive - ONWELO S.A\\Pulpit\\MediaMarkt\\20155.dtsx", package, null);

        
            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>ST_c138c6d2cb1a4aa9b4d163650c883250</msb:CodeName>
    <msb:DisplayName>ST_c138c6d2cb1a4aa9b4d163650c883250</msb:DisplayName>
    <msb:ProjectId>{1FE7543A-A6B6-4BBE-B2E5-43AB6888A644}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_c138c6d2cb1a4aa9b4d163650c883250.csproj" />
    <msb:File Include="ScriptMain.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_c138c6d2cb1a4aa9b4d163650c883250")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_c138c6d2cb1a4aa9b4d163650c883250")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="ST_c138c6d2cb1a4aa9b4d163650c883250.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{e2bc3dea-9015-432f-986a-cc309fc15c0c}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_c138c6d2cb1a4aa9b4d163650c883250</RootNamespace>
    <AssemblyName>ST_c138c6d2cb1a4aa9b4d163650c883250</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c138c6d2cb1a4aa9b4d163650c883250.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c138c6d2cb1a4aa9b4d163650c883250.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c138c6d2cb1a4aa9b4d163650c883250.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_c138c6d2cb1a4aa9b4d163650c883250.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_c138c6d2cb1a4aa9b4d163650c883250.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_c138c6d2cb1a4aa9b4d163650c883250.dll">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
+QBkADUACQHZBj8A6QABBkIAEQFkAEgAGQHBABAAGQG9Bk4AeQA3BlMAKQHyA1kAMQGzBmAAkQDb
BGUA6QDFBGoAkQDGBXAAOQHyA3YAQQEJA30AeQDoA4MAcQBaBo0AUQGOBgEAcQD0BAYAWQGmAJMA
WQHMBpwAqQD0BKIAyQD0BAYACAAUALwACAAYAMEAKQBzACkBLgALAAEBLgATAAoBLgAbACkBLgAj
ADIBLgArAFsBLgAzAFsBLgA7AFsBLgBDADIBLgBLAGEBLgBTAFsBLgBbAHgBQwBjAMEASQBzACkB
YQB7AMEAYwBrAMEAGwADAAEABAADAAAAqATyAAAAHwH3AAAAhgb8AAIABAADAAIABQAFAAEABgAF
AAIABwAHAASAAAABAAAAnhwzZgAAAAAAAAEAAAAEAAAAAAAAAAAAAACqAFsAAAAAAA4AAAAAAAAA
AAAAALMAUAMAAAAADgAAAAAAAAAAAAAAswA0AAAAAAAEAAAAAAAAAAAAAACqAPsDAAAAAAAAAAAB
AAAARQUAAAUAAgAAAABTVF9jMTM4YzZkMmNiMWE0YWE5YjRkMTYzNjUwYzg4MzI1MABJbnQzMgA8
TW9kdWxlPgBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBtc2NvcmxpYgBB
ZGQAZGVmYXVsdEluc3RhbmNlAFBhY2thZ2UAVmFyaWFibGUARXhlY3V0YWJsZQBSdW50aW1lVHlw
ZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBzZXRfTmFtZQBzZXRfVmFyaWFibGVOYW1lAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9D
dWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGlj
YXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRB
dHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRl
AEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5
VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZp
Z3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlv
blJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNv
cHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1i
bHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFNldFZhbHVl
AHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcARm9yRWFjaFZhcmlhYmxlTWFwcGluZwBT
dHJpbmcATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1v
ZGVsAFNUX2MxMzhjNmQyY2IxYTRhYTliNGQxNjM2NTBjODgzMjUwLmRsbABTYXZlVG9YbWwAZ2V0
X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBBcHBsaWNhdGlvbgBTeXN0
ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBz
ZXRfRGVzY3JpcHRpb24AQ3VsdHVyZUluZm8ARm9yRWFjaEVudW1lcmF0b3JJbmZvAEZvckVhY2hM
b29wAGdldF9SZXNvdXJjZU1hbmFnZXIARHRzQ29udGFpbmVyAHNldF9Gb3JFYWNoRW51bWVyYXRv
cgBzZXRfQ29sbGVjdGlvbkVudW1lcmF0b3IALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGlj
cwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfYzEz
OGM2ZDJjYjFhNGFhOWI0ZDE2MzY1MGM4ODMyNTAuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3Vy
Y2VzAERlYnVnZ2luZ01vZGVzAFNUX2MxMzhjNmQyY2IxYTRhYTliNGQxNjM2NTBjODgzMjUwLlBy
b3BlcnRpZXMAZ2V0X1Byb3BlcnRpZXMARHRzUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAGdldF9F
eGVjdXRhYmxlcwBnZXRfVmFyaWFibGVNYXBwaW5ncwBGb3JFYWNoVmFyaWFibGVNYXBwaW5ncwBT
ZXR0aW5ncwBnZXRfRm9yRWFjaEVudW1lcmF0b3JJbmZvcwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0
UmVzdWx0cwBJRFRTRXZlbnRzAE9iamVjdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABGb3JF
YWNoRW51bWVyYXRvckhvc3QAQ3JlYXRlTmV3AHNldF9WYWx1ZUluZGV4AGdldF9Bc3NlbWJseQBF
bXB0eQBEdHNQcm9wZXJ0eQAAACNTAFQATwBDAEsAOgBGAG8AcgBFAGEAYwBoAEwAbwBvAHAAAB9G
AG8AcgBFAGEAYwBoAEwAbwBvAHAATgBhAG0AZQAAH0YAbwByAEUAYQBjAGgATABvAG8AcABEAGUA
cwBjAAAbVgBhAHIAaQBhAGIAbABlAE4AYQBtAGUAcwAACVUAcwBlAHIAAAVJAGQAAC1GAG8AcgBl
AGEAYwBoACAAQQBEAE8AIABFAG4AdQBtAGUAcgBhAHQAbwByAAAlRABhAHQAYQBPAGIAagBlAGMA
dABWAGEAcgBpAGEAYgBsAGUAACdVAHMAZQByADoAOgBWAGEAcgBpAGEAYgBsAGUATgBhAG0AZQBz
AAAJVAB5AHAAZQAAgJdDADoAIABcAFUAcwBlAHIAcwBcAEIAbwBnAGQAYQBuAC4ATQBhAHIAYwB6
AGEAawBcAE8AbgBlAEQAcgBpAHYAZQAgAC0AIABPAE4AVwBFAEwATwAgAFMALgBBAFwAUAB1AGwA
cABpAHQAXABNAGUAZABpAGEATQBhAHIAawB0AFwAMgAwADEANQA1AC4AZAB0AHMAeAABcVMAVABf
AGMAMQAzADgAYwA2AGQAMgBjAGIAMQBhADQAYQBhADkAYgA0AGQAMQA2ADMANgA1ADAAYwA4ADgA
MwAyADUAMAAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAAAbT/gD
KjUZT4C840oS/T8sAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFdCQcEEj0SQRwSSQQgABJtBSAB
EnEOBCAAEn0JIAQSgIEOAg4cAgYOBSAAEoCJBSAAEoCNBCABARwFIAASgJUGIAESgJkcBCAAEkkE
IAEBAgUgAQESSQUgABKAnQYgARKAoRwFIAIBHBwJIAMBDhJBEoClBSAAEoCpCAABEoCtEYCxBSAA
EoC1ByACAQ4SgLUIt3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSVQMGElkDBhIQAgYIAwYR
FAQAABJVBAAAElkFAAEBElkEAAASEAMAAAEECAASVQQIABJZBAgAEhAIAQAIAAAAAAAeAQABAFQC
FldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUX2MxMzhjNmQyY2IxYTRhYTli
NGQxNjM2NTBjODgzMjUwAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjAAAEkBABouTkVURnJh
bWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdv
cmsgNC41AAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIs
IG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9r
ZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIA
AAAAAAAAAAAAAFBBRFBBRFC0AAAAgDIAAAAAAAAAAAAAmjIAAAAgAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAIwyAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAM2aeHAAAAQAzZp4cPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAFQAXwBjADEAMwA4AGMANgBkADIAYwBiADEAYQA0AGEAYQA5AGIANABkADEANgAzADYANQAw
AGMAOAA4ADMAMgA1ADAAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
NwAzADIANgAuADIANgAxADYAMwAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABT
AFQAXwBjADEAMwA4AGMANgBkADIAYwBiADEAYQA0AGEAYQA5AGIANABkADEANgAzADYANQAwAGMA
OAA4ADMAMgA1ADAALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAA
AEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIAMAAAACoAAQABAEwAZQBnAGEAbABUAHIA
YQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBh
AG0AZQAAAFMAVABfAGMAMQAzADgAYwA2AGQAMgBjAGIAMQBhADQAYQBhADkAYgA0AGQAMQA2ADMA
NgA1ADAAYwA4ADgAMwAyADUAMAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBl
AAAAAABTAFQAXwBjADEAMwA4AGMANgBkADIAYwBiADEAYQA0AGEAYQA5AGIANABkADEANgAzADYA
NQAwAGMAOAA4ADMAMgA1ADAAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADcAMwAyADYALgAyADYAMQA2ADMAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYA
ZQByAHMAaQBvAG4AAAAxAC4AMAAuADcAMwAyADYALgAyADYAMQA2ADMAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAArDIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="144.8,41.6"
          Id="Package\BM_poligon01"
          TopLeft="348.000005926405,63.0117655895991" />
        <NodeLayout
          Size="163.2,41.6"
          Id="Package\Flow Full Example"
          TopLeft="82.2857156870317,176.141178323818" />
        <NodeLayout
          Size="109.6,41.6"
          Id="Package\Robert"
          TopLeft="356.000006062645,181.694120195251" />
        <NodeLayout
          Size="130.4,41.6"
          Id="Package\Script Task"
          TopLeft="81.1428585247117,58.494117861553" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>